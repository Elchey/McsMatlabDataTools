classdef McsData
% Read and store the contents of a HDF5 file generated by MCS software.
% 
% Holds a cell array of the recordings present in the file.
%
% Usage:
%
%   Import the McsHDF5 package:
%   
%       import McsHDF5.*
%
%   Read a HDF5 file:
%
%       data = McsData('Name_of_HDF5_file.h5');
%
%   Plot the individual streams contained in the file:
%
%       plot(data,[]);
%
%   See help McsData.plot for more information
%

    properties
        FileName
        McsHdf5Version
        Data
        Recording = {};
    end
    
    methods
        
        function md = McsData(filename, varargin)
        % Reads a HDF5 file created by MCS software.
        %
        % function md = McsData(filename)
        % function md = McsData(filename, cfg)
        %
        % This command will just read the meta-information in the file, the
        % actual data will be read lazily, i.e. once it is needed (e.g.
        % when plot is called).
        %
        % Input:
        %   filename    -   (string) Name of the HDF5 file
        %   cfg     -   (optional) configuration structure, contains one or
        %               more of the following fields:
        %               'dataType': The type of the data, can be one of
        %               'double' (default), 'single' or 'raw'. For 'double'
        %               and 'single' the data is converted to meaningful
        %               units, while for 'raw' no conversion is done and
        %               the data is kept in ADC units. This uses less
        %               memory than the conversion to double, but you might
        %               have to convert the data prior to analysis, for
        %               example by using the getConvertedData function.
        %               'timeStampDataType': The type of the time stamps,
        %               can be either 'int64' (default) or 'double'. Using
        %               'double' is useful for older Matlab version without
        %               int64 arithmetic.
        %
        % Output:
        %   md          -   A McsData object
            if exist('h5info')
                mode = 'h5';
            else
                mode = 'hdf5';
            end
            if strcmp(mode,'h5') 
                inf = h5info(filename);
            else 
                inf = hdf5info(filename);
                inf = inf.GroupHierarchy;
            end
            md.FileName = inf.Filename;
            validFile = false;
            if strcmp(mode, 'h5')
                for att = 1:length(inf.Attributes)
                    if strcmp(inf.Attributes(att).Name,'McsHdf5ProtocolType')
                        if ~strcmp(inf.Attributes(att).Value,'RawData')
                            error('Only the RawData protocol type is supported!');
                        else
                            validFile = true;
                        end
                    elseif strcmp(inf.Attributes(att).Name,'McsHdf5ProtocolVersion')
                        if inf.Attributes(att).Value ~= 1
                            error('Only MCS HDF5 version 1 is supported!');
                        end
                    elseif strcmp(inf.Attributes(att).Name,'McsHdf5Version')
                        if inf.Attributes(att).Value ~= 1
                            error('Only MCS HDF5 version 1 is supported!');
                        else
                            validFile = true;
                        end
                    end
                end
            elseif strcmp(mode, 'hdf5')
                for att = 1:length(inf.Attributes)
                    if strcmp(inf.Attributes(att).Name,'/McsHdf5ProtocolType')
                        if ~strcmp(inf.Attributes(att).Value.Data,'RawData')
                            error('Only the RawData protocol type is supported!');
                        else
                            validFile = true;
                        end
                    elseif strcmp(inf.Attributes(att).Name,'/McsHdf5ProtocolVersion')
                        if inf.Attributes(att).Value ~= 1
                            error('Only MCS HDF5 version 1 is supported!');
                        end
                    elseif strcmp(inf.Attributes(att).Name,'/McsHdf5Version')
                        if inf.Attributes(att).Value ~= 1
                            error('Only MCS HDF5 version 1 is supported!');
                        else
                            validFile = true;
                        end
                    end
                end
            end
            if ~validFile
                error('This is not a valid Mcs HDF5 file!');
            end
            % Data structure
            dataAttributes = inf.Groups.Attributes;
            for fni = 1:length(dataAttributes)
                if strcmp(mode,'h5')
                    md.Data.(dataAttributes(fni).Name) = dataAttributes(fni).Value;
                elseif strcmp(mode,'hdf5')
                    str = regexp(dataAttributes(fni).Name,'/\w+$','match');
                    if isa(dataAttributes(fni).Value,'hdf5.h5string')
                        md.Data.(str{length(str)}(2:end)) = dataAttributes(fni).Value.Data;
                    else
                        md.Data.(str{length(str)}(2:end)) = dataAttributes(fni).Value;
                    end
                end
            end
            
            % Recordings
            for recs = 1:length(inf.Groups)
                if isempty(inf.Groups(recs).Groups)
                    continue
                end
                if isempty(varargin)
                    md.Recording{recs} = McsHDF5.McsRecording(filename, inf.Groups(recs).Groups);
                else
                    md.Recording{recs} = McsHDF5.McsRecording(filename, inf.Groups(recs).Groups, varargin{:});
                end
            end
        end
      
    end
    
end